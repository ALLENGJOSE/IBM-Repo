Reverse a given stack of 'N' integers using recursion. You are required to make changes in the input parameter itself.



Note: You are not allowed to use any extra space other than the internal stack space used due to recursion.



Example:
Input: [1,2,3,4,5] 
Output: [5,4,3,2,1]

Ans:import java.util.Stack;

public class Solution {


	private static void insertBottom(Stack<Integer> stack,int x){
		if(stack.isEmpty()){
			stack.push(x);
			return;
		}
		int top=stack.peek();
		stack.pop();

		insertBottom(stack,x);
		stack.push(top);
	}
    
	public static void reverseStack(Stack<Integer> stack) {
		// write your code here
		if(stack.isEmpty()) return;

		int num=stack.peek();
		stack.pop();

		reverseStack(stack);

		insertBottom(stack,num);
		
	}

}
